{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luis_\\\\Downloads\\\\Dise\\xF1o\\\\src\\\\CountdownSection.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\n\n// Updated with actual event images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [\"/assets/images/064.webp\", \"/assets/images/070.webp\", \"/assets/images/090.webp\", \"/assets/images/092.webp\", \"/assets/images/132.webp\", \"/assets/images/172.webp\"];\nconst IMAGE_CHANGE_INTERVAL = 4000; // Slower transition for better performance\n\n// Custom hook for interval with better performance\nfunction useInterval(callback, delay) {\n  _s();\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    if (delay !== null) {\n      const id = setInterval(() => savedCallback.current(), delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\nconst CountdownSection = /*#__PURE__*/_s2(/*#__PURE__*/React.memo(_c = _s2(() => {\n  _s2();\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const [isClient, setIsClient] = useState(false);\n  const sectionRef = useRef(null);\n  const [loadedImageSet, setLoadedImageSet] = useState(new Set());\n\n  // Enhanced preload with better error handling and progress tracking\n  useEffect(() => {\n    const preloadImages = async () => {\n      const loadPromises = images.map((src, index) => {\n        return new Promise(resolve => {\n          const img = new Image();\n          img.onload = () => {\n            setLoadedImageSet(prev => new Set([...prev, index]));\n            resolve({\n              index,\n              success: true\n            });\n          };\n          img.onerror = () => {\n            console.warn(`Failed to load image: ${src}`);\n            resolve({\n              index,\n              success: false\n            });\n          };\n\n          // Force hardware acceleration for preloaded images\n          img.style.transform = 'translate3d(0,0,0)';\n          img.src = src;\n        });\n      });\n      const results = await Promise.all(loadPromises);\n      const successfulLoads = results.filter(r => r.success).length;\n\n      // Consider loaded if at least half the images are ready\n      if (successfulLoads >= Math.ceil(images.length / 2)) {\n        setImagesLoaded(true);\n      }\n    };\n    preloadImages();\n  }, []);\n\n  // Optimized slideshow with useInterval hook\n  const advanceSlide = useCallback(() => {\n    if (imagesLoaded) {\n      setCurrentImageIndex(prevIndex => (prevIndex + 1) % images.length);\n    }\n  }, [imagesLoaded]);\n  useInterval(advanceSlide, imagesLoaded ? IMAGE_CHANGE_INTERVAL : null);\n\n  // Set isClient to true after component mounts\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Calculate time to event\n  const calculateTimeLeft = () => {\n    const eventDate = new Date('2025-06-29T19:00:00');\n    const currentTime = new Date();\n    const difference = eventDate.getTime() - currentTime.getTime();\n    if (difference > 0) {\n      return {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        minutes: Math.floor(difference / 1000 / 60 % 60),\n        seconds: Math.floor(difference / 1000 % 60)\n      };\n    }\n    return {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  };\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    if (!isClient) return;\n\n    // Initialize countdown immediately after client mounts\n    setCountdown(calculateTimeLeft());\n    const countdownTimer = setInterval(() => {\n      setCountdown(calculateTimeLeft());\n    }, 1000);\n    return () => clearInterval(countdownTimer);\n  }, [isClient]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"countdown\",\n    ref: sectionRef,\n    className: \"countdown-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `countdown-bg-slideshow ${!imagesLoaded ? 'countdown-bg-loading' : 'countdown-bg-loaded'}`,\n      style: {\n        backgroundImage: `url(${images[currentImageIndex]})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), !imagesLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"countdown-loading-text\",\n          children: \"Cargando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"countdown-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-branding\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"countdown-subtitle\",\n            children: \"\\xAE EUFORIA PRESENTA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-drop-cap\",\n              children: \"P\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-title-text\",\n              children: \"ROM LEM 129\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-timer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-unit\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-number\",\n              children: isClient ? String(countdown.days).padStart(2, \"0\") : \"00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-label\",\n              children: \"D\\xCDAS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-colon\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-unit\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-number\",\n              children: isClient ? String(countdown.hours).padStart(2, \"0\") : \"00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-label\",\n              children: \"HRS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-colon\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-unit\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-number\",\n              children: isClient ? String(countdown.minutes).padStart(2, \"0\") : \"00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-label\",\n              children: \"MIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-colon\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-unit\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-number\",\n              children: isClient ? String(countdown.seconds).padStart(2, \"0\") : \"00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"countdown-label\",\n              children: \"SEG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}, \"TsBesqg/3taxGLSbCrAEhgiHvGM=\", false, function () {\n  return [useInterval];\n})), \"TsBesqg/3taxGLSbCrAEhgiHvGM=\", false, function () {\n  return [useInterval];\n});\n_c2 = CountdownSection;\nCountdownSection.displayName = 'CountdownSection';\nexport default CountdownSection;\nvar _c, _c2;\n$RefreshReg$(_c, \"CountdownSection$React.memo\");\n$RefreshReg$(_c2, \"CountdownSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","images","IMAGE_CHANGE_INTERVAL","useInterval","callback","delay","_s","savedCallback","current","id","setInterval","clearInterval","CountdownSection","_s2","memo","_c","currentImageIndex","setCurrentImageIndex","imagesLoaded","setImagesLoaded","isClient","setIsClient","sectionRef","loadedImageSet","setLoadedImageSet","Set","preloadImages","loadPromises","map","src","index","Promise","resolve","img","Image","onload","prev","success","onerror","console","warn","style","transform","results","all","successfulLoads","filter","r","length","Math","ceil","advanceSlide","prevIndex","calculateTimeLeft","eventDate","Date","currentTime","difference","getTime","days","floor","hours","minutes","seconds","countdown","setCountdown","countdownTimer","ref","className","children","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","_c2","displayName","$RefreshReg$"],"sources":["C:/Users/luis_/Downloads/Diseño/src/CountdownSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\"\r\n\r\n// Updated with actual event images\r\nconst images = [\r\n  \"/assets/images/064.webp\",\r\n  \"/assets/images/070.webp\", \r\n  \"/assets/images/090.webp\",\r\n  \"/assets/images/092.webp\",\r\n  \"/assets/images/132.webp\",\r\n  \"/assets/images/172.webp\",\r\n]\r\n\r\nconst IMAGE_CHANGE_INTERVAL = 4000 // Slower transition for better performance\r\n\r\n// Custom hook for interval with better performance\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    if (delay !== null) {\r\n      const id = setInterval(() => savedCallback.current(), delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nconst CountdownSection = React.memo(() => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0)\r\n  const [imagesLoaded, setImagesLoaded] = useState(false)\r\n  const [isClient, setIsClient] = useState(false)\r\n  const sectionRef = useRef(null)\r\n  const [loadedImageSet, setLoadedImageSet] = useState(new Set())\r\n\r\n  // Enhanced preload with better error handling and progress tracking\r\n  useEffect(() => {\r\n    const preloadImages = async () => {\r\n      const loadPromises = images.map((src, index) => {\r\n        return new Promise((resolve) => {\r\n          const img = new Image()\r\n          \r\n          img.onload = () => {\r\n            setLoadedImageSet(prev => new Set([...prev, index]))\r\n            resolve({ index, success: true })\r\n          }\r\n          \r\n          img.onerror = () => {\r\n            console.warn(`Failed to load image: ${src}`)\r\n            resolve({ index, success: false })\r\n          }\r\n          \r\n          // Force hardware acceleration for preloaded images\r\n          img.style.transform = 'translate3d(0,0,0)'\r\n          img.src = src\r\n        })\r\n      })\r\n\r\n      const results = await Promise.all(loadPromises)\r\n      const successfulLoads = results.filter(r => r.success).length\r\n      \r\n      // Consider loaded if at least half the images are ready\r\n      if (successfulLoads >= Math.ceil(images.length / 2)) {\r\n        setImagesLoaded(true)\r\n      }\r\n    }\r\n\r\n    preloadImages()\r\n  }, [])\r\n\r\n  // Optimized slideshow with useInterval hook\r\n  const advanceSlide = useCallback(() => {\r\n    if (imagesLoaded) {\r\n      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length)\r\n    }\r\n  }, [imagesLoaded])\r\n\r\n  useInterval(advanceSlide, imagesLoaded ? IMAGE_CHANGE_INTERVAL : null)\r\n\r\n  // Set isClient to true after component mounts\r\n  useEffect(() => {\r\n    setIsClient(true)\r\n  }, [])\r\n\r\n  // Calculate time to event\r\n  const calculateTimeLeft = () => {\r\n    const eventDate = new Date('2025-06-29T19:00:00')\r\n    const currentTime = new Date()\r\n    const difference = eventDate.getTime() - currentTime.getTime()\r\n\r\n    if (difference > 0) {\r\n      return {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60)\r\n      }\r\n    }\r\n\r\n    return { days: 0, hours: 0, minutes: 0, seconds: 0 }\r\n  }\r\n\r\n  const [countdown, setCountdown] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 })\r\n\r\n  useEffect(() => {\r\n    if (!isClient) return\r\n\r\n    // Initialize countdown immediately after client mounts\r\n    setCountdown(calculateTimeLeft())\r\n\r\n    const countdownTimer = setInterval(() => {\r\n      setCountdown(calculateTimeLeft())\r\n    }, 1000)\r\n    return () => clearInterval(countdownTimer)\r\n  }, [isClient])\r\n\r\n  return (\r\n    <div id=\"countdown\" ref={sectionRef} className=\"countdown-section\">\r\n      {/* Background Image Slideshow - simplified */}\r\n      <div\r\n        className={`countdown-bg-slideshow ${\r\n          !imagesLoaded ? 'countdown-bg-loading' : 'countdown-bg-loaded'\r\n        }`}\r\n        style={{\r\n          backgroundImage: `url(${images[currentImageIndex]})`,\r\n        }}\r\n      />\r\n\r\n      {/* Loading state overlay */}\r\n      {!imagesLoaded && (\r\n        <div className=\"countdown-loading-overlay\">\r\n          <div className=\"countdown-loading-content\">\r\n            <div className=\"countdown-spinner\"></div>\r\n            <p className=\"countdown-loading-text\">Cargando...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Overlay */}\r\n      <div className=\"countdown-overlay\">\r\n\r\n        {/* Main Content */}\r\n        <main className=\"countdown-main\">\r\n          {/* Event Branding */}\r\n          <div className=\"countdown-branding\">\r\n            <span className=\"countdown-subtitle\">\r\n              ® EUFORIA PRESENTA\r\n            </span>\r\n\r\n            {/* Title with Drop Cap */}\r\n            <div className=\"countdown-title\">\r\n              <span className=\"countdown-drop-cap\">\r\n                P\r\n              </span>\r\n              <span className=\"countdown-title-text\">ROM LEM 129</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Countdown Container */}\r\n          <div className=\"countdown-timer\">\r\n            <div className=\"countdown-unit\">\r\n              <span className=\"countdown-number\">\r\n                {isClient ? String(countdown.days).padStart(2, \"0\") : \"00\"}\r\n              </span>\r\n              <span className=\"countdown-label\">DÍAS</span>\r\n            </div>\r\n\r\n            <div className=\"countdown-colon\">:</div>\r\n\r\n            <div className=\"countdown-unit\">\r\n              <span className=\"countdown-number\">\r\n                {isClient ? String(countdown.hours).padStart(2, \"0\") : \"00\"}\r\n              </span>\r\n              <span className=\"countdown-label\">HRS</span>\r\n            </div>\r\n\r\n            <div className=\"countdown-colon\">:</div>\r\n\r\n            <div className=\"countdown-unit\">\r\n              <span className=\"countdown-number\">\r\n                {isClient ? String(countdown.minutes).padStart(2, \"0\") : \"00\"}\r\n              </span>\r\n              <span className=\"countdown-label\">MIN</span>\r\n            </div>\r\n\r\n            <div className=\"countdown-colon\">:</div>\r\n\r\n            <div className=\"countdown-unit\">\r\n              <span className=\"countdown-number\">\r\n                {isClient ? String(countdown.seconds).padStart(2, \"0\") : \"00\"}\r\n              </span>\r\n              <span className=\"countdown-label\">SEG</span>\r\n            </div>\r\n          </div>\r\n        </main>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nCountdownSection.displayName = 'CountdownSection'\r\n\r\nexport default CountdownSection "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}